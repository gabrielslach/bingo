[{"D:\\Desktop\\bingo\\bingo-frontend\\src\\App.js":"1","D:\\Desktop\\bingo\\bingo-frontend\\src\\index.js":"2","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard.js":"3","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Lobby.js":"4","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckView.js":"5","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\CardView.js":"6","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\Cards.js":"7","D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\useClassicGameAdmin.js":"8","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\Card.js":"9","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\ListBox.js":"10","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin.js":"11","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\GameDrawer.js":"12","D:\\Desktop\\bingo\\bingo-frontend\\src\\reportWebVitals.js":"13","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\Card.js":"14","D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\useGameDrawer.js":"15","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\NameDrawerView.js":"16","D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\utilityFunctions.js":"17","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\CreateRoom.js":"18","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\PlayerDeckView.js":"19","D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\usePlayerLogin.js":"20","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\CardView.js":"21","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckViewLogin.js":"22","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\AddCardDialog.js":"23","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\DeleteCardDialog.js":"24","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\DeletePlayerDialog.js":"25","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\CommonComponents\\DialogScaffold.js":"26","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\GameDrawer\\ResetPickedCellsDialog.js":"27","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckView\\SelectCellChipArray.js":"28","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckView\\SelectCellDialog.js":"29"},{"size":2653,"mtime":1617166467272,"results":"30","hashOfConfig":"31"},{"size":517,"mtime":1616811055374,"results":"32","hashOfConfig":"31"},{"size":6073,"mtime":1616836734616,"results":"33","hashOfConfig":"31"},{"size":3004,"mtime":1616994141809,"results":"34","hashOfConfig":"31"},{"size":5447,"mtime":1617245401677,"results":"35","hashOfConfig":"31"},{"size":2876,"mtime":1617243495332,"results":"36","hashOfConfig":"31"},{"size":922,"mtime":1616811055376,"results":"37","hashOfConfig":"31"},{"size":4868,"mtime":1617179050018,"results":"38","hashOfConfig":"31"},{"size":1546,"mtime":1616811055375,"results":"39","hashOfConfig":"31"},{"size":1132,"mtime":1616811055376,"results":"40","hashOfConfig":"31"},{"size":12091,"mtime":1617183282536,"results":"41","hashOfConfig":"31"},{"size":7270,"mtime":1617164309614,"results":"42","hashOfConfig":"31"},{"size":375,"mtime":1616811055377,"results":"43","hashOfConfig":"31"},{"size":1856,"mtime":1617153730283,"results":"44","hashOfConfig":"31"},{"size":4915,"mtime":1617179808248,"results":"45","hashOfConfig":"31"},{"size":1661,"mtime":1616811055376,"results":"46","hashOfConfig":"31"},{"size":660,"mtime":1616991025153,"results":"47","hashOfConfig":"31"},{"size":1849,"mtime":1616814956214,"results":"48","hashOfConfig":"31"},{"size":4805,"mtime":1617149176727,"results":"49","hashOfConfig":"31"},{"size":4270,"mtime":1617179408051,"results":"50","hashOfConfig":"31"},{"size":2845,"mtime":1616811055376,"results":"51","hashOfConfig":"31"},{"size":3257,"mtime":1617204481510,"results":"52","hashOfConfig":"31"},{"size":2160,"mtime":1617100082388,"results":"53","hashOfConfig":"31"},{"size":2114,"mtime":1617100068796,"results":"54","hashOfConfig":"31"},{"size":782,"mtime":1617100032670,"results":"55","hashOfConfig":"31"},{"size":1359,"mtime":1617099996946,"results":"56","hashOfConfig":"31"},{"size":721,"mtime":1617100217334,"results":"57","hashOfConfig":"31"},{"size":1785,"mtime":1617243373877,"results":"58","hashOfConfig":"31"},{"size":1308,"mtime":1617199077552,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"j62p19",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Desktop\\bingo\\bingo-frontend\\src\\App.js",["132","133"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\index.js",[],["134","135"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard.js",["136"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport {Grid, TextField, Button} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nimport ListBox from './Dashboard/ListBox'\r\nimport Cards from './Dashboard/Cards'\r\nimport CardView from './Dashboard/CardView'\r\nimport NameDrawerView from './Dashboard/NameDrawerView'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: 'gray',\r\n    },\r\n}))\r\n\r\nconst names_static = [\r\n    'Tiffany',\r\n    'Lucille',\r\n    'Thomas',\r\n    'Subhaan',\r\n    'Sydney',\r\n    'Lily',\r\n    'Keeley',\r\n    'Kristi',\r\n    'Izaac',\r\n    'Kayson',\r\n    'Kamile',\r\n    'Alishia',\r\n    'Etienne',\r\n    'Sahar',\r\n    'Daniyal',\r\n    'Pranav',\r\n    'Isla',\r\n    'Komal',\r\n    'Sarina',\r\n    'Aqib'\r\n]\r\n\r\nconst cards_static = [\r\n    [[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]],\r\n    [[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]],\r\n    [[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]],\r\n    [[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]]\r\n]\r\n\r\nconst participant_me = 'Drix'\r\n\r\nfunction Dashboard(props) {\r\n    const classes = useStyles();\r\n\r\n    const {roomID} = props;\r\n\r\n    const [selectedCardIndex, setSelectedCardIndex] = useState('')\r\n    const [cardOwners, setCardOwners] = useState({})\r\n    const [cardProperties, setCardProperties] = useState({})\r\n    const [pickedNames, setPickedNames] = useState([])\r\n    const [names, setNames] = useState([])\r\n    const [cards, setCards] = useState([])\r\n\r\n    //temp\r\n    const [newNameVal, setNewNameVal] = useState('')\r\n\r\n    const handleSelectCard = (index) => {\r\n        setSelectedCardIndex(index)\r\n    }\r\n\r\n    const handleBack = () => {\r\n        setSelectedCardIndex('')\r\n    }\r\n\r\n    const handleUseCard = (index) => {\r\n        const cardOwners_copy = {...cardOwners}\r\n        if (!cardOwners_copy[participant_me]) {\r\n            cardOwners_copy[participant_me] = [];\r\n        };\r\n        cardOwners_copy[participant_me].push(index);\r\n        setCardOwners(cardOwners_copy);\r\n    }\r\n\r\n    const handleCancelOwnership = (cardIndex) => {\r\n        const cardOwners_copy = {...cardOwners};\r\n        const index = cardOwners_copy[participant_me].indexOf(cardIndex)\r\n        if (index < 0) {\r\n            return;\r\n        }\r\n        cardOwners_copy[participant_me].splice(index,1)\r\n        setCardOwners(cardOwners_copy);\r\n    }\r\n\r\n    const handleAddName = (e) => {\r\n        const names_copy = [...names];\r\n        e.preventDefault();\r\n        if (names_copy.includes(newNameVal)) {\r\n            return;\r\n        }\r\n        names_copy.push(newNameVal)\r\n        \r\n        setNewNameVal('')\r\n        setNames(names_copy)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        const cardProps_temp = {};\r\n        Object.entries(cardOwners).forEach(([key,val])=>{\r\n            val.forEach(item=> {\r\n                cardProps_temp[item] = key;\r\n            })\r\n        });\r\n        setCardProperties(cardProps_temp);\r\n        //writeData();\r\n    }, [cardOwners])\r\n\r\n    useEffect(()=>{\r\n        //writeData(roomID,'gameData', {names, pickedNames})\r\n    }, [names, pickedNames])\r\n\r\n    useEffect(()=>{\r\n        const numOfCards = 4;\r\n        const cards_temp = [];\r\n        let pickedNumbers = null;\r\n        for (let i = 0; i < numOfCards; i++) {\r\n            cards_temp.push([])\r\n            pickedNumbers = [];\r\n            for (let j = 0; j < 5; j++) {\r\n                cards_temp[i].push([])\r\n                for (let k = 0; k < 5; k++) {\r\n                    let randomNum = null;\r\n                    do {\r\n                        randomNum = Math.random() * names_static.length;\r\n                        randomNum = randomNum.toFixed(0);\r\n                    } while((pickedNumbers.includes(randomNum) || names_static[randomNum] === '' || names_static[randomNum] === null || names_static[randomNum] === undefined) && pickedNumbers.length < names_static.length)\r\n                    pickedNumbers.push(randomNum)\r\n                    cards_temp[i][j].push(names_static[randomNum]);\r\n                }\r\n            }\r\n        }\r\n        setCards(cards_temp);\r\n    },[names])\r\n\r\n    return(\r\n        <Grid container direction='row' spacing={2} justify='center' className={classes.root}>\r\n            <Grid item xs={10} sm={3} md={2}>\r\n                <ListBox items={names} listName={`Room ${roomID} Participants`}/>\r\n            </Grid>\r\n            <Grid item xs={10} sm={3} md={2}>\r\n                <ListBox items={names} listName='Items List'/>\r\n            </Grid>\r\n            <Grid item xs={10} sm={3} md={2}>\r\n                <ListBox items={pickedNames} listName='Picked Items'/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={8}>\r\n                <NameDrawerView names={names} pickedNames={pickedNames} setPickedNames={setPickedNames} />\r\n            </Grid>\r\n            {selectedCardIndex === '' ? \r\n                <Grid item xs={12} sm={6} md={8}>\r\n                    <Cards items={cards} onSelectCard={handleSelectCard} cardProperties={cardProperties}/>\r\n                </Grid>\r\n            :\r\n                <Grid item xs={12} sm={6} md={8}>\r\n                    <CardView\r\n                        items={cards[selectedCardIndex]}\r\n                        index={selectedCardIndex} \r\n                        onBack={handleBack} \r\n                        onUseCard={handleUseCard} \r\n                        onCancelOwnership={handleCancelOwnership} \r\n                        cardOwner={cardProperties[selectedCardIndex]}\r\n                        participant_me={participant_me}\r\n                    />\r\n                </Grid>\r\n            }\r\n            <Grid item><TextField label='Participant Name' margin='dense'/><Button>Set</Button></Grid>\r\n            <Grid item><form onSubmit={handleAddName}><TextField label='New Item' margin='dense' value={newNameVal} onChange={e => {setNewNameVal(e.target.value)}} /><Button onClick={handleAddName} >Set</Button></form></Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n",["137","138"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Lobby.js",["139"],"import React from 'react'\r\n\r\nimport {useRouteMatch} from 'react-router-dom';\r\n\r\nimport {Paper, Typography, TextField, Grid, Button} from '@material-ui/core/';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        height: '100%'\r\n    },\r\n    paperRoot: {\r\n        padding: theme.spacing(2)\r\n    }\r\n    \r\n}))\r\n\r\nfunction Lobby(props) {\r\n    const {setRoomID} = props;\r\n    const classes = useStyles();\r\n    const match = useRouteMatch();\r\n\r\n    const handleCreateRoom = () => {\r\n        //const roomID = createRoom();\r\n        //setRoomID(roomID);\r\n    }\r\n\r\n    const handleGoToUPSCARoom = () => {\r\n        const lobbyUrl = match.path\r\n        const upscaRoomUrl = lobbyUrl + 'UPSCA';\r\n        window.location.assign(upscaRoomUrl);\r\n    }\r\n\r\n    const handleGoToRoom = (e) => {\r\n        e.preventDefault();\r\n        const lobbyUrl = match.path\r\n        const roomUrl = lobbyUrl + e.target.roomId.value;\r\n        e.target.reset();\r\n        window.location.assign(roomUrl);\r\n    }\r\n\r\n    return(\r\n        <Grid container direction='row' justify='center' alignItems='center' className={classes.root}>\r\n            <Grid item md={6} sm={10} xs={12}>\r\n        <Paper classes={{root: classes.paperRoot}}>\r\n            <Grid container direction='column' justify='center' alignItems='center' spacing={2}>\r\n                <Grid item>\r\n                    <Typography variant='h3'>Bingo!</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container direction='column' spacing={1} justify='center' alignItems='center'>\r\n                        <Grid item>\r\n                            <Button variant='outlined' onClick={handleGoToUPSCARoom}>Join UPSCA Bingo</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant={'subtitle1'}>or</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <form onSubmit={handleGoToRoom}>\r\n                    <Grid container direction='column' spacing={1} justify='center' alignItems='center'>\r\n                        <Grid item>\r\n                            <TextField variant='outlined' label='Room ID' margin=\"dense\" name='roomId'/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant='outlined' type='submit'>Join Room</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant={'subtitle1'}>or</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant='outlined' onClick={handleCreateRoom}>Create Room</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n        </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Lobby;","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckView.js",["140","141","142"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\CardView.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\Cards.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\useClassicGameAdmin.js",["143"],"import { useState } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { postRequest } from \"./utilityFunctions\";\r\n\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst displayToast = (message, type, displayDuration) => {\r\n  toast(message, {\r\n    position: toast.POSITION.TOP_CENTER,\r\n    type: type,\r\n    autoClose: displayDuration,\r\n  });\r\n};\r\n\r\nexport default function useClassicGameAdmin(vars) { // You could use this var to set something on the local state.\r\n  let [cookies, setCookie, removeCookie] = useCookies(['loginToken']);\r\n\r\n  var timeOutVar;\r\n\r\n  //states\r\n  const [players, setPlayers] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  /*************** Dont edit below this line ***************/\r\n  function startTimeout() {\r\n    timeOutVar = setTimeout(function () {\r\n    console.log(\"Server Timeout\");\r\n    }, 120000);\r\n  }\r\n\r\n  function stopTimeout() {\r\n    clearTimeout(timeOutVar);\r\n  }\r\n\r\n  const onRequestSuccess = (req, resData, onSuccess) => {\r\n    const { data, oFlag, oMessage } = resData;\r\n    if (oFlag) {\r\n        onSuccess(data);\r\n    } else {\r\n        console.log(req, ': ', oMessage);\r\n        alert(oMessage);\r\n    };\r\n    \r\n    setIsLoading(false);\r\n    displayToast(\r\n        oMessage,\r\n        oFlag ? toast.TYPE.SUCCESS : toast.TYPE.ERROR,\r\n        2500\r\n        );\r\n  };\r\n\r\n  const onRequestFail = (req, status) => {\r\n    if (status === 401) {\r\n      removeCookie('loginToken', {path: '/'});\r\n      removeCookie('userInfo', {path: '/'});\r\n      console.log('Token reset.', cookies)\r\n    }\r\n    \r\n    setIsLoading(false);\r\n    alert(status);\r\n    console.log(\r\n      \"Server Error: Please contact your server administrator.\",\r\n    );\r\n    \r\n    displayToast(\r\n        status || 'Server Error',\r\n        toast.TYPE.ERROR,\r\n        2500\r\n        );\r\n  };\r\n\r\n  const makePostRequest = (req, api, dataparam, loginToken, onSuccess) => {\r\n    postRequest(api, dataparam, loginToken)\r\n      .then((res) => {\r\n        stopTimeout();\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          onRequestFail(req, res.status);\r\n        } else {\r\n          onRequestSuccess(req, res.data, onSuccess);  \r\n        }\r\n      })\r\n      .catch((err) => {\r\n        stopTimeout();\r\n        onRequestFail(req, (err && err.response) ? err.response.status: '');\r\n        console.log(\"makePostRequest_err: \", err);\r\n      });\r\n  };\r\n\r\n  /*************** Dont edit above this line ***************/\r\n\r\n  const makeRequest = (req, vars = {}, event) => {\r\n    var api = \"\";\r\n    var dataparam = {};\r\n    let onSuccess = () => {};\r\n    const { roomId, playerId, noOfCards } = vars;\r\n    setIsLoading(true);\r\n    startTimeout();\r\n    switch (req) {\r\n      case \"get-player\":\r\n        api += \"get-player\";\r\n        dataparam = {playerId, userId: playerId, roomId}; // This are the parameters or arguments supplied on the post request.\r\n        onSuccess = (data) => { // This is a callback that executes at post request success. i.e. data is the res.data returned by the server\r\n            setCards(data.cards);\r\n            setPlayers(data.player);\r\n        }\r\n        break;\r\n      case \"get-player-all\":\r\n        api += \"get-player-all\";\r\n        dataparam = {userId: 'admin', roomId};\r\n        onSuccess = (data) => { // This is a callback that executes at post request success. i.e. data is the res.data returned by the server\r\n            setPlayers(data.players.reverse());\r\n        }\r\n        break;\r\n    case \"register-player\" :\r\n        const {\r\n            name, \r\n            email, \r\n        } = vars;\r\n        api += \"register-player\";\r\n        dataparam = {name, email, noOfCards, roomId, userId: 'admin'};\r\n        onSuccess = (data) => {\r\n            makeRequest('get-player-all', {roomId});\r\n            event.target.reset();\r\n        };\r\n        break;\r\n    case \"delete-player\" :\r\n        api += \"delete-player\";\r\n        dataparam = {roomId, userId: 'admin', playerId};\r\n        onSuccess = (data) => {\r\n            makeRequest('get-player-all', {roomId});\r\n        };\r\n        break;\r\n    case \"delete-card\" :\r\n        const {\r\n            cardId\r\n        } = vars;\r\n        api += \"delete-card\";\r\n        dataparam = {roomId, userId: 'admin', playerId, cardId};\r\n        onSuccess = (data) => {\r\n            makeRequest('get-player-all', {roomId});\r\n        };\r\n        break;\r\n    case \"add-card\" :\r\n        api += \"add-card\";\r\n        dataparam = {roomId, userId: 'admin', playerId, noOfCards};\r\n        onSuccess = (data) => {\r\n            makeRequest('get-player-all', {roomId});\r\n        };\r\n        break;\r\n      default:\r\n    }\r\n    if (req !== \"\" || typeof req !== \"undefined\") makePostRequest(req, api, dataparam, cookies.loginToken, onSuccess);\r\n  };\r\n\r\n  return [\r\n    cards,\r\n    players,\r\n    isLoading,\r\n    makeRequest,\r\n  ];\r\n}\r\n",["144","145"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\Card.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\ListBox.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin.js",["146","147","148"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\GameDrawer.js",["149","150","151","152","153","154","155","156","157"],"import React, {useEffect, useState, useRef} from 'react';\r\n\r\nimport {\r\n    Grid, \r\n    Button,\r\n    Typography, \r\n    Paper, \r\n    IconButton, \r\n    Backdrop, \r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {RotateLeft as RotateLeftIcon} from '@material-ui/icons';\r\nimport Image from 'material-ui-image';\r\n\r\nimport useGameDrawer from '../../util/useGameDrawer';\r\nimport ResetPickedCellsDialog from './GameDrawer/ResetPickedCellsDialog'\r\n\r\nconst bingo = {\r\n    B: [1,15],\r\n    I: [16, 30],\r\n    N: [31,45],\r\n    G: [46,60],\r\n    O: [61,75],\r\n}\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n    gridRoot: {\r\n        minHeight: '105%'\r\n    },\r\n    roundPaper: {\r\n        width: '80px',\r\n        height: '80px',\r\n        borderRadius: '100%',\r\n    },\r\n    centeredTypography: {\r\n        textAlign: 'center',\r\n        paddingTop: '25px'\r\n    },\r\n    h1Typography: {\r\n        fontSize: '15em',\r\n        color: 'white',\r\n        textShadow: '4px 3px #d6a224',\r\n        fontFamily: \"'Bangers', cursive\"\r\n    },\r\n    h5Typography: {\r\n        color: 'white',\r\n        textShadow: '2px 2px 4px #000000',\r\n        paddingTop: theme.spacing(3)\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      },\r\n    img: {\r\n        width: '20em',\r\n        height: 'auto'\r\n    },\r\n    credits: {\r\n        fontSize: '0.5em',\r\n        color: 'rgba(255,255,255,0.2)'\r\n    },\r\n    ballTypo: {\r\n        fontFamily: \"'Bangers', cursive\"\r\n    }\r\n}));\r\n\r\nconst GameDrawer = props => {\r\n    const {roomId} = props;\r\n    const classes = useStyles();\r\n\r\n    const [pickedCells, isLoading, setPickedCells] = useGameDrawer();\r\n    const [letter, setLetter] = useState('');\r\n    const [number, setNumber] = useState(0);\r\n    const [intervalId, setIntervalId] = useState(NaN);\r\n    const [isWaiting, setIsWaiting] = useState(false);\r\n    const [pickedCellsForDisplay, setPickedCellsForDisplay] = useState([]);\r\n    const [resetDialog, setResetDialog] = useState(false);\r\n    \r\n    const audio = useRef(new Audio('/bngsnd.mp3'));\r\n\r\n    const getLetter = number_ => {\r\n        if (number_ < 1) {\r\n            return('');\r\n        }\r\n        switch (true) {\r\n            case (number_ < 16):\r\n                return('B')\r\n                break;\r\n            case (number_ < 31):\r\n                return('I')\r\n                break;\r\n            case (number_ < 46):\r\n                return('N')\r\n                break;\r\n            case (number_ < 61):\r\n                return('G')\r\n                break;\r\n            case (number_ <= 75):\r\n                return('O')\r\n                break;\r\n            default:\r\n                return('')\r\n                break;\r\n        };\r\n    };\r\n\r\n    const handleDrawNumber = () => {\r\n        setPickedCells('pick-cell', {roomId});\r\n        audio.current.play();\r\n        const rangeStart = 1;\r\n        const rangeEnd = 75;\r\n\r\n        setIsWaiting(true);\r\n        const intervalId_ = setInterval(() => {\r\n            const randomFloat = Math.random();\r\n            setNumber(Math.floor(randomFloat * (rangeEnd - rangeStart)) + rangeStart);\r\n        }, 50);\r\n        setIntervalId(intervalId_);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setResetDialog(true);\r\n    };\r\n\r\n    const handleConfirmReset = () => {\r\n        setPickedCells('reset-picked-cells', {roomId});\r\n    };\r\n\r\n    useEffect(()=> {\r\n        if (!isNaN(intervalId)) {\r\n            setTimeout(() => {\r\n                clearInterval(intervalId);\r\n                setNumber(pickedCells[pickedCells.length - 1]);\r\n                setIsWaiting(false);\r\n                \r\n                audio.current.pause();\r\n                audio.current.currentTime = 0;\r\n\r\n                const pickedCells_ = [...pickedCells];\r\n                pickedCells_.reverse();\r\n                setPickedCellsForDisplay(pickedCells_);\r\n            }, 2000);\r\n        } else {\r\n            const pickedCells_ = [...pickedCells];\r\n            pickedCells_.reverse();\r\n            setPickedCellsForDisplay(pickedCells_);\r\n        }\r\n    }, [pickedCells]);\r\n\r\n    useEffect(()=>{\r\n        if (number && number > 0) {\r\n            const letter_ = getLetter(number);\r\n            setLetter(letter_);\r\n        } else {\r\n            setLetter('');\r\n        };\r\n    }, [number]);\r\n    \r\n    useEffect(()=> {\r\n        setPickedCells('get-picked-cells', {roomId});\r\n        document.title = 'BINGO! Picker';\r\n    }, []);\r\n\r\n    return(\r\n        <Grid container direction='column' alignItems='center' spacing={4} className={classes.gridRoot}>\r\n            <Grid item>\r\n                <Typography variant='h5' className={classes.h5Typography}>\r\n                    Classic Bingo - Room {roomId}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant='h1' className={classes.h1Typography}>\r\n                    {letter} {number > 0 && number}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button \r\n                    variant='outlined' \r\n                    onClick={handleDrawNumber} \r\n                    disabled={isWaiting || pickedCells.length === 75} \r\n                    >\r\n                    {pickedCells.length === 75 ? 'All numbers picked.' : 'Draw Number'}\r\n                </Button>\r\n                <Tooltip title='Reset Draw' aria-label='reset draw'>\r\n                    <IconButton aria-label=\"delete\" className={classes.margin} onClick={handleReset}>\r\n                        <RotateLeftIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n                <Grid container direction='row' spacing={2} justify='flex-start'>\r\n                    {pickedCellsForDisplay.map(item=> {\r\n                        const letter_ = getLetter(item);\r\n                        return (\r\n                            <Grid item key={`${item}-ball-grid`}>\r\n                                <Paper elevation={3} className={classes.roundPaper}>\r\n                                    <Typography variant='h5' className={`${classes.centeredTypography} ${classes.ballTypo}`}>{letter_} {item}</Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                        );\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n            <ResetPickedCellsDialog open={resetDialog} setOpen={setResetDialog} onConfirm={handleConfirmReset}/>\r\n            <Backdrop className={classes.backdrop} open={isWaiting || isLoading}>\r\n                <Grid container direction='column' alignItems='center'>\r\n                    <Grid item>\r\n                <div className={classes.img}>\r\n                    <Image\r\n                        src='/raffle-loading.gif'\r\n                        style={{\r\n                            opacity: 1\r\n                        }}\r\n                        />\r\n                </div></Grid><Grid item>\r\n                <Typography variant='subtitle2' className={classes.credits}>“Sound effects obtained from https://www.zapsplat.com“</Typography>\r\n                </Grid></Grid>\r\n            </Backdrop>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GameDrawer;",["158","159"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\reportWebVitals.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\Card.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\useGameDrawer.js",["160","161"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\NameDrawerView.js",["162","163","164","165"],"import React, {useState} from 'react'\r\n\r\nimport {Grid, List, ListItem, ListItemText, Typography, Button} from '@material-ui/core/';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        minHeight: '100%'\r\n    },\r\n    list: {\r\n        maxHeight: '100%'\r\n    }\r\n}))\r\n\r\nconst filterFunc = (pickedNames) => (val) => {\r\n    return (!pickedNames.includes(val))\r\n}\r\n\r\nfunction NameDrawerView(props) {\r\n    const {ariaLabel = 'picked list', names = [], pickedNames = [], setPickedNames} = props;\r\n    const [disabled, setDisabled] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const [pickedName, setPickedName] = useState('')\r\n\r\n    const draw = () => {\r\n        const pickedNames_copy = [...pickedNames]\r\n        const pool = names.filter(filterFunc(pickedNames))\r\n        const random_index = Math.floor(Math.random() * pool.length)\r\n\r\n        console.log(pool[random_index])\r\n        if (random_index >= pool.length) {\r\n            setDisabled(true)\r\n            return;\r\n        }\r\n\r\n        pickedNames_copy.unshift(pool[random_index])\r\n\r\n        setPickedName(pool[random_index])\r\n        setPickedNames(pickedNames_copy)\r\n    }\r\n\r\n    return(\r\n        <Grid container direction='column' justify='flex-start' className={classes.root}>\r\n            <Grid item>\r\n                <Typography variant='h4'>{pickedName || 'BINGO Picker'}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button variant='contained' disabled={disabled} onClick={()=>draw()} >Draw a Name</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NameDrawerView;","D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\utilityFunctions.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\CreateRoom.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\PlayerDeckView.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\usePlayerLogin.js",["166"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\CardView.js",[],["167","168"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckViewLogin.js",["169","170","171"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\AddCardDialog.js",["172"],"import React, {useState} from 'react';\r\nimport {TextField} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport DialogScaffold from '../CommonComponents/DialogScaffold'\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n\r\n}));\r\n\r\nconst FieldsGrid = (props) => {\r\n    const {setNoOfCards, noOfCards, confirmFinal} = props;\r\n    return(\r\n    <React.Fragment>\r\n        {\r\n        !confirmFinal &&\r\n        <TextField\r\n            autoFocus\r\n            fullWidth\r\n            label='No. of cards'\r\n            margin='dense'\r\n            value={noOfCards}\r\n            onChange={e=>setNoOfCards(e.target.value)}\r\n        />\r\n        }\r\n    </React.Fragment>);\r\n};\r\n\r\nconst AddCardDialog = (props) => {\r\n    const {open, setOpen, onConfirm, playerId, playerName} = props;\r\n    const classes = useStyles();\r\n\r\n    const [confirmFinal, setConfirmFinal] = useState(false);\r\n    const [noOfCards, setNoOfCards] = useState('');\r\n\r\n    const handleOpen = () => {\r\n        setConfirmFinal(false);\r\n        setOpen();\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        if (confirmFinal) {\r\n            onConfirm(playerId, noOfCards);\r\n            setOpen();\r\n            setNoOfCards('');\r\n            setConfirmFinal(false);\r\n        } else if (noOfCards.length > 0) {\r\n            setConfirmFinal(true);\r\n        };\r\n    };\r\n\r\n    const handleCancel = ()=>{\r\n        setNoOfCards('');\r\n    };\r\n\r\n    return (\r\n        <DialogScaffold\r\n        open={open}\r\n        setOpen={handleOpen}\r\n        onConfirm={handleConfirm}\r\n        onCancel={handleCancel}\r\n        title='Add Cards'\r\n        contentText={`${confirmFinal ? \r\n            `Are you sure to add ${noOfCards} cards to player ${playerId} ${playerName}'s deck?` :\r\n            `Specify how many cards you want to add.`\r\n            }`}\r\n        FieldsGrid={<FieldsGrid \r\n                    noOfCards={noOfCards} \r\n                    setNoOfCards={setNoOfCards} \r\n                    confirmFinal={confirmFinal}\r\n                    />\r\n                   }\r\n        confirmText={`${confirmFinal ? 'Confirm': 'Done'}`}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AddCardDialog;\r\n\r\n","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\DeleteCardDialog.js",["173"],"import React, {useState} from 'react';\r\nimport {TextField} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport DialogScaffold from '../CommonComponents/DialogScaffold'\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n\r\n}));\r\n\r\nconst FieldsGrid = (props) => {\r\n    const {setCardId, cardId, confirmFinal} = props;\r\n    return(\r\n    <React.Fragment>\r\n        {\r\n        !confirmFinal &&\r\n        <TextField\r\n            autoFocus\r\n            fullWidth\r\n            label='Card No.'\r\n            margin='dense'\r\n            value={cardId}\r\n            onChange={e=>setCardId(e.target.value)}\r\n        />\r\n        }\r\n    </React.Fragment>);\r\n};\r\n\r\nconst DeleteCardDialog = (props) => {\r\n    const {open, setOpen, onConfirm, playerId, playerName} = props;\r\n    const classes = useStyles();\r\n\r\n    const [confirmFinal, setConfirmFinal] = useState(false);\r\n    const [cardId, setCardId] = useState('');\r\n\r\n    const handleOpen = () => {\r\n        setConfirmFinal(false);\r\n        setOpen();\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        if (confirmFinal) {\r\n            onConfirm(playerId, cardId);\r\n            setOpen();\r\n            setCardId('');\r\n            setConfirmFinal(false);\r\n        } else if (cardId.length > 0) {\r\n            setConfirmFinal(true);\r\n        };\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setCardId('');\r\n    };\r\n\r\n    return (\r\n        <DialogScaffold\r\n        open={open}\r\n        setOpen={handleOpen}\r\n        onConfirm={handleConfirm}\r\n        onCancel={handleCancel}\r\n        title='Delete Card'\r\n        contentText={`${confirmFinal ? \r\n            `Are you sure to delete player ${playerId} ${playerName}'s card ${cardId}?` :\r\n            `Specify which card you want to delete.`\r\n            }`}\r\n        FieldsGrid={<FieldsGrid \r\n                    cardId={cardId} \r\n                    setCardId={setCardId} \r\n                    confirmFinal={confirmFinal}\r\n                    />\r\n                   }\r\n        confirmText={`${confirmFinal ? 'Confirm': 'Done'}`}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DeleteCardDialog;\r\n\r\n","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\DeletePlayerDialog.js",["174","175"],"import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport DialogScaffold from '../CommonComponents/DialogScaffold'\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n\r\n}));\r\n\r\nconst DeletePlayerDialog = (props) => {\r\n    const {open, setOpen, onConfirm, playerId, playerName} = props;\r\n    const classes = useStyles();\r\n\r\n    const handleConfirm = () => {\r\n        onConfirm(playerId);\r\n        setOpen();\r\n    };\r\n\r\n    return(\r\n        <DialogScaffold\r\n        open={open}\r\n        setOpen={setOpen}\r\n        onConfirm={handleConfirm}\r\n        title='Delete Player'\r\n        contentText={`Are you sure to delete player ${playerId} ${playerName}?`}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DeletePlayerDialog;\r\n\r\n","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\CommonComponents\\DialogScaffold.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\GameDrawer\\ResetPickedCellsDialog.js",["176"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport DialogScaffold from '../CommonComponents/DialogScaffold'\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n\r\n}));\r\n\r\nconst ResetPickedCellsDialog = (props) => {\r\n    const {open, setOpen, onConfirm} = props;\r\n    const classes = useStyles();\r\n\r\n    const handleConfirm = () => {\r\n        onConfirm();\r\n        setOpen();\r\n    };\r\n\r\n    return(\r\n        <DialogScaffold\r\n        open={open}\r\n        setOpen={setOpen}\r\n        onConfirm={handleConfirm}\r\n        title='Reset Draw Numbers'\r\n        contentText={`Are you sure to reset the draw? This can't be undone.`}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ResetPickedCellsDialog;\r\n\r\n","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckView\\SelectCellChipArray.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckView\\SelectCellDialog.js",["177"],{"ruleId":"178","severity":1,"message":"179","line":9,"column":3,"nodeType":"180","messageId":"181","endLine":9,"endColumn":7},{"ruleId":"178","severity":1,"message":"182","line":25,"column":10,"nodeType":"180","messageId":"181","endLine":25,"endColumn":14},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"178","severity":1,"message":"187","line":41,"column":7,"nodeType":"180","messageId":"181","endLine":41,"endColumn":19},{"ruleId":"183","replacedBy":"188"},{"ruleId":"185","replacedBy":"189"},{"ruleId":"178","severity":1,"message":"190","line":20,"column":12,"nodeType":"180","messageId":"181","endLine":20,"endColumn":21},{"ruleId":"178","severity":1,"message":"191","line":66,"column":38,"nodeType":"180","messageId":"181","endLine":66,"endColumn":47},{"ruleId":"178","severity":1,"message":"192","line":67,"column":21,"nodeType":"180","messageId":"181","endLine":67,"endColumn":31},{"ruleId":"193","severity":1,"message":"194","line":109,"column":8,"nodeType":"195","endLine":109,"endColumn":17,"suggestions":"196"},{"ruleId":"178","severity":1,"message":"197","line":18,"column":17,"nodeType":"180","messageId":"181","endLine":18,"endColumn":26},{"ruleId":"183","replacedBy":"198"},{"ruleId":"185","replacedBy":"199"},{"ruleId":"178","severity":1,"message":"200","line":84,"column":13,"nodeType":"180","messageId":"181","endLine":84,"endColumn":18},{"ruleId":"193","severity":1,"message":"201","line":207,"column":8,"nodeType":"195","endLine":207,"endColumn":17,"suggestions":"202"},{"ruleId":"193","severity":1,"message":"203","line":218,"column":10,"nodeType":"195","endLine":218,"endColumn":12,"suggestions":"204"},{"ruleId":"178","severity":1,"message":"205","line":19,"column":7,"nodeType":"180","messageId":"181","endLine":19,"endColumn":12},{"ruleId":"206","severity":1,"message":"207","line":89,"column":17,"nodeType":"208","messageId":"209","endLine":89,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":92,"column":17,"nodeType":"208","messageId":"209","endLine":92,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":95,"column":17,"nodeType":"208","messageId":"209","endLine":95,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":98,"column":17,"nodeType":"208","messageId":"209","endLine":98,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":101,"column":17,"nodeType":"208","messageId":"209","endLine":101,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":104,"column":17,"nodeType":"208","messageId":"209","endLine":104,"endColumn":23},{"ruleId":"193","severity":1,"message":"210","line":149,"column":8,"nodeType":"195","endLine":149,"endColumn":21,"suggestions":"211"},{"ruleId":"193","severity":1,"message":"212","line":163,"column":8,"nodeType":"195","endLine":163,"endColumn":10,"suggestions":"213"},{"ruleId":"183","replacedBy":"214"},{"ruleId":"185","replacedBy":"215"},{"ruleId":"178","severity":1,"message":"197","line":18,"column":17,"nodeType":"180","messageId":"181","endLine":18,"endColumn":26},{"ruleId":"206","severity":1,"message":"207","line":124,"column":9,"nodeType":"208","messageId":"209","endLine":124,"endColumn":15},{"ruleId":"178","severity":1,"message":"216","line":3,"column":15,"nodeType":"180","messageId":"181","endLine":3,"endColumn":19},{"ruleId":"178","severity":1,"message":"217","line":3,"column":21,"nodeType":"180","messageId":"181","endLine":3,"endColumn":29},{"ruleId":"178","severity":1,"message":"218","line":3,"column":31,"nodeType":"180","messageId":"181","endLine":3,"endColumn":43},{"ruleId":"178","severity":1,"message":"219","line":20,"column":12,"nodeType":"180","messageId":"181","endLine":20,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":137,"column":11,"nodeType":"208","messageId":"209","endLine":137,"endColumn":17},{"ruleId":"183","replacedBy":"220"},{"ruleId":"185","replacedBy":"221"},{"ruleId":"178","severity":1,"message":"222","line":4,"column":21,"nodeType":"180","messageId":"181","endLine":4,"endColumn":31},{"ruleId":"193","severity":1,"message":"223","line":48,"column":8,"nodeType":"195","endLine":48,"endColumn":17,"suggestions":"224"},{"ruleId":"193","severity":1,"message":"225","line":56,"column":8,"nodeType":"195","endLine":56,"endColumn":10,"suggestions":"226"},{"ruleId":"178","severity":1,"message":"227","line":31,"column":11,"nodeType":"180","messageId":"181","endLine":31,"endColumn":18},{"ruleId":"178","severity":1,"message":"227","line":31,"column":11,"nodeType":"180","messageId":"181","endLine":31,"endColumn":18},{"ruleId":"178","severity":1,"message":"228","line":2,"column":9,"nodeType":"180","messageId":"181","endLine":2,"endColumn":13},{"ruleId":"178","severity":1,"message":"227","line":13,"column":11,"nodeType":"180","messageId":"181","endLine":13,"endColumn":18},{"ruleId":"178","severity":1,"message":"227","line":12,"column":11,"nodeType":"180","messageId":"181","endLine":12,"endColumn":18},{"ruleId":"178","severity":1,"message":"227","line":13,"column":11,"nodeType":"180","messageId":"181","endLine":13,"endColumn":18},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","no-native-reassign",["229"],"no-negated-in-lhs",["230"],"'cards_static' is assigned a value but never used.",["229"],["230"],"'setRoomID' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'isLoading2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.path', 'playerId', 'roomId', and 'setClassicGameAdmin'. Either include them or remove the dependency array.","ArrayExpression",["231"],"'setCookie' is assigned a value but never used.",["229"],["230"],"'cards' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomId' and 'setClassicGameAdmin'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has missing dependencies: 'cookies.userInfo', 'roomId', and 'setPickedCells'. Either include them or remove the dependency array.",["233"],"'bingo' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has a missing dependency: 'intervalId'. Either include it or remove the dependency array.",["234"],"React Hook useEffect has missing dependencies: 'roomId' and 'setPickedCells'. Either include them or remove the dependency array.",["235"],["229"],["230"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ariaLabel' is assigned a value but never used.",["229"],["230"],"'withStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'match.path'. Either include it or remove the dependency array.",["236"],"React Hook useEffect has missing dependencies: 'match.path' and 'roomId'. Either include them or remove the dependency array.",["237"],"'classes' is assigned a value but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [cookies, match.path, playerId, roomId, setClassicGameAdmin]",{"range":"252","text":"253"},"Update the dependencies array to be: [cookies, roomId, setClassicGameAdmin]",{"range":"254","text":"255"},"Update the dependencies array to be: [cookies.userInfo, roomId, setPickedCells]",{"range":"256","text":"257"},"Update the dependencies array to be: [intervalId, pickedCells]",{"range":"258","text":"259"},"Update the dependencies array to be: [roomId, setPickedCells]",{"range":"260","text":"261"},"Update the dependencies array to be: [cookies, match.path]",{"range":"262","text":"263"},"Update the dependencies array to be: [match.path, roomId]",{"range":"264","text":"265"},[3151,3160],"[cookies, match.path, playerId, roomId, setClassicGameAdmin]",[6283,6292],"[cookies, roomId, setClassicGameAdmin]",[6601,6603],"[cookies.userInfo, roomId, setPickedCells]",[4087,4100],"[intervalId, pickedCells]",[4455,4457],"[roomId, setPickedCells]",[1439,1448],"[cookies, match.path]",[1684,1686],"[match.path, roomId]"]