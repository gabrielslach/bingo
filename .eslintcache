[{"D:\\Desktop\\bingo\\bingo-frontend\\src\\App.js":"1","D:\\Desktop\\bingo\\bingo-frontend\\src\\index.js":"2","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard.js":"3","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Lobby.js":"4","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckView.js":"5","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\CardView.js":"6","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\Cards.js":"7","D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\useClassicGameAdmin.js":"8","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\Card.js":"9","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\ListBox.js":"10","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin.js":"11","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\GameDrawer.js":"12","D:\\Desktop\\bingo\\bingo-frontend\\src\\reportWebVitals.js":"13","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\Card.js":"14","D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\useGameDrawer.js":"15","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\NameDrawerView.js":"16","D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\utilityFunctions.js":"17","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\CreateRoom.js":"18","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\PlayerDeckView.js":"19","D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\usePlayerLogin.js":"20","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\CardView.js":"21","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckViewLogin.js":"22","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\AddCardDialog.js":"23","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\DeleteCardDialog.js":"24","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\DeletePlayerDialog.js":"25","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\CommonComponents\\DialogScaffold.js":"26","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\GameDrawer\\ResetPickedCellsDialog.js":"27"},{"size":2308,"mtime":1616990391331,"results":"28","hashOfConfig":"29"},{"size":517,"mtime":1616811055374,"results":"30","hashOfConfig":"29"},{"size":6073,"mtime":1616836734616,"results":"31","hashOfConfig":"29"},{"size":3004,"mtime":1616994141809,"results":"32","hashOfConfig":"29"},{"size":1875,"mtime":1616850560419,"results":"33","hashOfConfig":"29"},{"size":2624,"mtime":1617003189211,"results":"34","hashOfConfig":"29"},{"size":922,"mtime":1616811055376,"results":"35","hashOfConfig":"29"},{"size":4994,"mtime":1617096360951,"results":"36","hashOfConfig":"29"},{"size":1546,"mtime":1616811055375,"results":"37","hashOfConfig":"29"},{"size":1132,"mtime":1616811055376,"results":"38","hashOfConfig":"29"},{"size":11790,"mtime":1617154489158,"results":"39","hashOfConfig":"29"},{"size":7227,"mtime":1617155523348,"results":"40","hashOfConfig":"29"},{"size":375,"mtime":1616811055377,"results":"41","hashOfConfig":"29"},{"size":1856,"mtime":1617153730283,"results":"42","hashOfConfig":"29"},{"size":4853,"mtime":1617101441902,"results":"43","hashOfConfig":"29"},{"size":1661,"mtime":1616811055376,"results":"44","hashOfConfig":"29"},{"size":660,"mtime":1616991025153,"results":"45","hashOfConfig":"29"},{"size":1849,"mtime":1616814956214,"results":"46","hashOfConfig":"29"},{"size":4805,"mtime":1617149176727,"results":"47","hashOfConfig":"29"},{"size":3745,"mtime":1617001127063,"results":"48","hashOfConfig":"29"},{"size":2845,"mtime":1616811055376,"results":"49","hashOfConfig":"29"},{"size":3094,"mtime":1616814956214,"results":"50","hashOfConfig":"29"},{"size":2160,"mtime":1617100082388,"results":"51","hashOfConfig":"29"},{"size":2114,"mtime":1617100068796,"results":"52","hashOfConfig":"29"},{"size":782,"mtime":1617100032670,"results":"53","hashOfConfig":"29"},{"size":1359,"mtime":1617099996946,"results":"54","hashOfConfig":"29"},{"size":721,"mtime":1617100217334,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"j62p19",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},"D:\\Desktop\\bingo\\bingo-frontend\\src\\App.js",["127","128"],"import './App.css';\r\n\r\nimport React, {useState} from 'react'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nimport Dashboard from './pages/Dashboard'\r\nimport CreateRoom from './pages/CreateRoom'\r\nimport Lobby from './pages/Lobby'\r\nimport ClassicAdmin from './pages/Classic/Admin'\r\nimport ClassicDeckView from './pages/Classic/DeckView'\r\nimport ClassicDeckViewLogin from './pages/Classic/DeckViewLogin'\r\nimport ClassicGameDrawer from './pages/Classic/GameDrawer'\r\n\r\nfunction Home() {\r\n  const [roomID, setRoomID] = useState(null) //create custom hook once grew\r\n  return (\r\n    <>\r\n      {roomID === null && <CreateRoom setRoomID={setRoomID}/>}\r\n      {roomID !== null && <Dashboard roomID={roomID}/>}\r\n      </>\r\n  );\r\n}\r\n\r\nfunction AdminRouter(props) {\r\n  const {roomId} = props;\r\n  const match = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n    <Route path={`${match.path}/game-drawer`}>\r\n      <ClassicGameDrawer roomId={roomId} />\r\n    </Route>\r\n    <Route path={`${match.path}/`}>\r\n      <ClassicAdmin roomId={roomId} />\r\n    </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nfunction GameRoom() {\r\n  const {roomId} = useParams();\r\n  const match = useRouteMatch();\r\n  return (\r\n  <Switch>\r\n    <Route path={`${match.path}/admin`}>\r\n      <AdminRouter roomId={roomId}/>\r\n    </Route>\r\n    <Route path={`${match.path}/:playerId`}>\r\n      <ClassicDeckView roomId={roomId} />\r\n    </Route>\r\n    <Route path={`${match.path}/`}>\r\n      <ClassicDeckViewLogin roomId={roomId} />\r\n    </Route>\r\n  </Switch>);\r\n}\r\n\r\nfunction ClassicBingo() {\r\n  const match = useRouteMatch();\r\n  return(\r\n    <Switch>\r\n      <Route path={`${match.path}/:roomId`}>\r\n        <GameRoom/>\r\n      </Route>\r\n      <Route path={`${match.path}/`}>\r\n        <Lobby/>\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <CookiesProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/classic'>\r\n            <ClassicBingo/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Redirect to={{pathname:'/classic/UPSCA'}}/>\r\n            {/* <Home/> */}\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </CookiesProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n",["129","130"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\index.js",[],["131","132"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard.js",["133"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport {Grid, TextField, Button} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nimport ListBox from './Dashboard/ListBox'\r\nimport Cards from './Dashboard/Cards'\r\nimport CardView from './Dashboard/CardView'\r\nimport NameDrawerView from './Dashboard/NameDrawerView'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: 'gray',\r\n    },\r\n}))\r\n\r\nconst names_static = [\r\n    'Tiffany',\r\n    'Lucille',\r\n    'Thomas',\r\n    'Subhaan',\r\n    'Sydney',\r\n    'Lily',\r\n    'Keeley',\r\n    'Kristi',\r\n    'Izaac',\r\n    'Kayson',\r\n    'Kamile',\r\n    'Alishia',\r\n    'Etienne',\r\n    'Sahar',\r\n    'Daniyal',\r\n    'Pranav',\r\n    'Isla',\r\n    'Komal',\r\n    'Sarina',\r\n    'Aqib'\r\n]\r\n\r\nconst cards_static = [\r\n    [[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]],\r\n    [[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]],\r\n    [[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]],\r\n    [[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]]\r\n]\r\n\r\nconst participant_me = 'Drix'\r\n\r\nfunction Dashboard(props) {\r\n    const classes = useStyles();\r\n\r\n    const {roomID} = props;\r\n\r\n    const [selectedCardIndex, setSelectedCardIndex] = useState('')\r\n    const [cardOwners, setCardOwners] = useState({})\r\n    const [cardProperties, setCardProperties] = useState({})\r\n    const [pickedNames, setPickedNames] = useState([])\r\n    const [names, setNames] = useState([])\r\n    const [cards, setCards] = useState([])\r\n\r\n    //temp\r\n    const [newNameVal, setNewNameVal] = useState('')\r\n\r\n    const handleSelectCard = (index) => {\r\n        setSelectedCardIndex(index)\r\n    }\r\n\r\n    const handleBack = () => {\r\n        setSelectedCardIndex('')\r\n    }\r\n\r\n    const handleUseCard = (index) => {\r\n        const cardOwners_copy = {...cardOwners}\r\n        if (!cardOwners_copy[participant_me]) {\r\n            cardOwners_copy[participant_me] = [];\r\n        };\r\n        cardOwners_copy[participant_me].push(index);\r\n        setCardOwners(cardOwners_copy);\r\n    }\r\n\r\n    const handleCancelOwnership = (cardIndex) => {\r\n        const cardOwners_copy = {...cardOwners};\r\n        const index = cardOwners_copy[participant_me].indexOf(cardIndex)\r\n        if (index < 0) {\r\n            return;\r\n        }\r\n        cardOwners_copy[participant_me].splice(index,1)\r\n        setCardOwners(cardOwners_copy);\r\n    }\r\n\r\n    const handleAddName = (e) => {\r\n        const names_copy = [...names];\r\n        e.preventDefault();\r\n        if (names_copy.includes(newNameVal)) {\r\n            return;\r\n        }\r\n        names_copy.push(newNameVal)\r\n        \r\n        setNewNameVal('')\r\n        setNames(names_copy)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        const cardProps_temp = {};\r\n        Object.entries(cardOwners).forEach(([key,val])=>{\r\n            val.forEach(item=> {\r\n                cardProps_temp[item] = key;\r\n            })\r\n        });\r\n        setCardProperties(cardProps_temp);\r\n        //writeData();\r\n    }, [cardOwners])\r\n\r\n    useEffect(()=>{\r\n        //writeData(roomID,'gameData', {names, pickedNames})\r\n    }, [names, pickedNames])\r\n\r\n    useEffect(()=>{\r\n        const numOfCards = 4;\r\n        const cards_temp = [];\r\n        let pickedNumbers = null;\r\n        for (let i = 0; i < numOfCards; i++) {\r\n            cards_temp.push([])\r\n            pickedNumbers = [];\r\n            for (let j = 0; j < 5; j++) {\r\n                cards_temp[i].push([])\r\n                for (let k = 0; k < 5; k++) {\r\n                    let randomNum = null;\r\n                    do {\r\n                        randomNum = Math.random() * names_static.length;\r\n                        randomNum = randomNum.toFixed(0);\r\n                    } while((pickedNumbers.includes(randomNum) || names_static[randomNum] === '' || names_static[randomNum] === null || names_static[randomNum] === undefined) && pickedNumbers.length < names_static.length)\r\n                    pickedNumbers.push(randomNum)\r\n                    cards_temp[i][j].push(names_static[randomNum]);\r\n                }\r\n            }\r\n        }\r\n        setCards(cards_temp);\r\n    },[names])\r\n\r\n    return(\r\n        <Grid container direction='row' spacing={2} justify='center' className={classes.root}>\r\n            <Grid item xs={10} sm={3} md={2}>\r\n                <ListBox items={names} listName={`Room ${roomID} Participants`}/>\r\n            </Grid>\r\n            <Grid item xs={10} sm={3} md={2}>\r\n                <ListBox items={names} listName='Items List'/>\r\n            </Grid>\r\n            <Grid item xs={10} sm={3} md={2}>\r\n                <ListBox items={pickedNames} listName='Picked Items'/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={8}>\r\n                <NameDrawerView names={names} pickedNames={pickedNames} setPickedNames={setPickedNames} />\r\n            </Grid>\r\n            {selectedCardIndex === '' ? \r\n                <Grid item xs={12} sm={6} md={8}>\r\n                    <Cards items={cards} onSelectCard={handleSelectCard} cardProperties={cardProperties}/>\r\n                </Grid>\r\n            :\r\n                <Grid item xs={12} sm={6} md={8}>\r\n                    <CardView\r\n                        items={cards[selectedCardIndex]}\r\n                        index={selectedCardIndex} \r\n                        onBack={handleBack} \r\n                        onUseCard={handleUseCard} \r\n                        onCancelOwnership={handleCancelOwnership} \r\n                        cardOwner={cardProperties[selectedCardIndex]}\r\n                        participant_me={participant_me}\r\n                    />\r\n                </Grid>\r\n            }\r\n            <Grid item><TextField label='Participant Name' margin='dense'/><Button>Set</Button></Grid>\r\n            <Grid item><form onSubmit={handleAddName}><TextField label='New Item' margin='dense' value={newNameVal} onChange={e => {setNewNameVal(e.target.value)}} /><Button onClick={handleAddName} >Set</Button></form></Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n",["134","135"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Lobby.js",["136"],"import React from 'react'\r\n\r\nimport {useRouteMatch} from 'react-router-dom';\r\n\r\nimport {Paper, Typography, TextField, Grid, Button} from '@material-ui/core/';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        height: '100%'\r\n    },\r\n    paperRoot: {\r\n        padding: theme.spacing(2)\r\n    }\r\n    \r\n}))\r\n\r\nfunction Lobby(props) {\r\n    const {setRoomID} = props;\r\n    const classes = useStyles();\r\n    const match = useRouteMatch();\r\n\r\n    const handleCreateRoom = () => {\r\n        //const roomID = createRoom();\r\n        //setRoomID(roomID);\r\n    }\r\n\r\n    const handleGoToUPSCARoom = () => {\r\n        const lobbyUrl = match.path\r\n        const upscaRoomUrl = lobbyUrl + 'UPSCA';\r\n        window.location.assign(upscaRoomUrl);\r\n    }\r\n\r\n    const handleGoToRoom = (e) => {\r\n        e.preventDefault();\r\n        const lobbyUrl = match.path\r\n        const roomUrl = lobbyUrl + e.target.roomId.value;\r\n        e.target.reset();\r\n        window.location.assign(roomUrl);\r\n    }\r\n\r\n    return(\r\n        <Grid container direction='row' justify='center' alignItems='center' className={classes.root}>\r\n            <Grid item md={6} sm={10} xs={12}>\r\n        <Paper classes={{root: classes.paperRoot}}>\r\n            <Grid container direction='column' justify='center' alignItems='center' spacing={2}>\r\n                <Grid item>\r\n                    <Typography variant='h3'>Bingo!</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container direction='column' spacing={1} justify='center' alignItems='center'>\r\n                        <Grid item>\r\n                            <Button variant='outlined' onClick={handleGoToUPSCARoom}>Join UPSCA Bingo</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant={'subtitle1'}>or</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <form onSubmit={handleGoToRoom}>\r\n                    <Grid container direction='column' spacing={1} justify='center' alignItems='center'>\r\n                        <Grid item>\r\n                            <TextField variant='outlined' label='Room ID' margin=\"dense\" name='roomId'/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant='outlined' type='submit'>Join Room</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant={'subtitle1'}>or</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant='outlined' onClick={handleCreateRoom}>Create Room</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n        </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Lobby;","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckView.js",["137","138"],"import React, {useEffect} from 'react';\r\nimport {\r\n    useParams,\r\n    useRouteMatch\r\n  } from \"react-router-dom\";\r\n\r\n  \r\nimport {Grid, Typography} from '@material-ui/core/';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CardView from './CardView'\r\n\r\nimport useClassicGameAdmin from '../../util/useClassicGameAdmin';\r\nimport usePlayerLogin from '../../util/usePlayerLogin';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    headers: {\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nfunction DeckView(props) {\r\n    const {roomId} = props;\r\n    const match = useRouteMatch();\r\n\r\n    const classes = useStyles();\r\n\r\n    const {playerId} = useParams();\r\n    \r\n    const [cards = [], players = [], isLoading, setClassicGameAdmin ] = useClassicGameAdmin();\r\n    const [cookies] = usePlayerLogin();\r\n\r\n    useEffect(()=> {\r\n        if (cookies.loginToken) {\r\n            setClassicGameAdmin('get-player', {playerId, roomId});\r\n        } else {\r\n            const rootPath = match.path.split('/:roomId/:playerId')[0]\r\n            window.location.assign(`${rootPath}/${roomId}`)\r\n        };\r\n    }, [cookies]);\r\n    \r\n    return (\r\n        <Grid container direction='row' alignItems = 'center' spacing={2} className={classes.root}>\r\n            <Grid item className={classes.headers}>\r\n                <Typography variant='h6'><b>Welcome {players.name}!</b></Typography>\r\n                <Typography variant='subtitle2'>Player ID: {players.id}</Typography>\r\n            </Grid>\r\n            {cards.map(item => (\r\n                <Grid item key={`${playerId}-card-${item.id}`} lg={3} md={4} sm={6} xs={12}>\r\n                    <CardView items={item.cells} cardId={`${roomId}-${item.id}`}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n        \r\n    )\r\n  }\r\n\r\n  export default DeckView;","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\CardView.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\Cards.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\useClassicGameAdmin.js",["139"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\Card.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\ListBox.js",[],["140","141"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin.js",["142","143","144","145"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\GameDrawer.js",["146","147","148","149","150","151","152","153","154"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\reportWebVitals.js",[],["155","156"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\Card.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\useGameDrawer.js",["157","158"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\NameDrawerView.js",["159","160","161","162"],"import React, {useState} from 'react'\r\n\r\nimport {Grid, List, ListItem, ListItemText, Typography, Button} from '@material-ui/core/';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        minHeight: '100%'\r\n    },\r\n    list: {\r\n        maxHeight: '100%'\r\n    }\r\n}))\r\n\r\nconst filterFunc = (pickedNames) => (val) => {\r\n    return (!pickedNames.includes(val))\r\n}\r\n\r\nfunction NameDrawerView(props) {\r\n    const {ariaLabel = 'picked list', names = [], pickedNames = [], setPickedNames} = props;\r\n    const [disabled, setDisabled] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const [pickedName, setPickedName] = useState('')\r\n\r\n    const draw = () => {\r\n        const pickedNames_copy = [...pickedNames]\r\n        const pool = names.filter(filterFunc(pickedNames))\r\n        const random_index = Math.floor(Math.random() * pool.length)\r\n\r\n        console.log(pool[random_index])\r\n        if (random_index >= pool.length) {\r\n            setDisabled(true)\r\n            return;\r\n        }\r\n\r\n        pickedNames_copy.unshift(pool[random_index])\r\n\r\n        setPickedName(pool[random_index])\r\n        setPickedNames(pickedNames_copy)\r\n    }\r\n\r\n    return(\r\n        <Grid container direction='column' justify='flex-start' className={classes.root}>\r\n            <Grid item>\r\n                <Typography variant='h4'>{pickedName || 'BINGO Picker'}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button variant='contained' disabled={disabled} onClick={()=>draw()} >Draw a Name</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NameDrawerView;","D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\utilityFunctions.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\CreateRoom.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\PlayerDeckView.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\util\\usePlayerLogin.js",["163"],"import { useContext } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { useCookies } from 'react-cookie';\r\n\r\nimport { postRequest } from \"./utilityFunctions\";\r\n\r\nconst displayToast = (message, type, displayDuration) => {\r\n  toast(message, {\r\n    position: toast.POSITION.TOP_CENTER,\r\n    type: type,\r\n    autoClose: displayDuration,\r\n  });\r\n};\r\n\r\nexport default function useClassicGameAdmin(vars) { // You could use this var to set something on the local state.\r\n\r\n  var timeOutVar;\r\n\r\n  //states\r\n  \r\n  const [cookies, setCookie] = useCookies(['loginToken', 'userInfo']);\r\n\r\n  /*************** Dont edit below this line ***************/\r\n  function startTimeout() {\r\n    timeOutVar = setTimeout(function () {\r\n    console.log(\"Server Timeout\");\r\n    }, 120000);\r\n  }\r\n\r\n  function stopTimeout() {\r\n    clearTimeout(timeOutVar);\r\n  }\r\n\r\n  const onRequestSuccess = (req, resData, onSuccess) => {\r\n    const { data, oFlag, oMessage } = resData;\r\n    if (oFlag) {\r\n        onSuccess(data);\r\n    } else {\r\n        console.log(req, ': ', oMessage);\r\n    };\r\n    \r\n    displayToast(\r\n        oMessage,\r\n        oFlag ? toast.TYPE.SUCCESS : toast.TYPE.ERROR,\r\n        2500\r\n        );\r\n  };\r\n\r\n  const onRequestFail = (req, status) => {\r\n    console.log(\r\n      \"Server Error: Please contact your server administrator.\",\r\n    );\r\n    \r\n    displayToast(\r\n        status || 'Server Error',\r\n        toast.TYPE.ERROR,\r\n        2500\r\n        );\r\n  };\r\n\r\n  const makePostRequest = (req, api, dataparam, loginToken, onSuccess) => {\r\n    postRequest(api, dataparam, loginToken)\r\n      .then((res) => {\r\n        stopTimeout();\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          onRequestFail(req, res.status);\r\n        } else {\r\n          onRequestSuccess(req, res.data, onSuccess);  \r\n        }\r\n      })\r\n      .catch((err) => {\r\n        stopTimeout();\r\n        console.log(\"makePostRequest_err: \", err);\r\n      });\r\n  };\r\n\r\n  /*************** Dont edit above this line ***************/\r\n\r\n  const makeRequest = (req, vars = {}) => {\r\n    var api = \"\";\r\n    var dataparam = {};\r\n    let onSuccess = () => {};\r\n\r\n    const {\r\n      roomId = '',\r\n      playerId = '',\r\n      password\r\n  } = vars;\r\n\r\n    startTimeout();\r\n    switch (req) {\r\n      // case \"get-player\":\r\n      //   const {playerId} = vars;\r\n      //   api = \"get-player\";\r\n      //   dataparam = {playerId}; // This are the parameters or arguments supplied on the post request.\r\n      //   onSuccess = (data) => { // This is a callback that executes at post request success. i.e. data is the res.data returned by the server\r\n            \r\n      //   }\r\n      //   break;\r\n    case \"login\" :\r\n        api = \"login\";\r\n        dataparam = {roomId, password};\r\n        onSuccess = (data) => {\r\n            const {loginToken} = data;\r\n            const maxAge = 24 * 60 * 60;\r\n            \r\n            setCookie('loginToken', loginToken, { path: '/', maxAge });\r\n            setCookie('userInfo', {roomId, userId: 'admin'}, { path: '/', maxAge });\r\n            window.location.reload();\r\n        };\r\n        break;\r\n    case \"player-login\" :\r\n        api = \"player-login\";\r\n        dataparam = {roomId, userId : playerId, playerCode: password};\r\n        onSuccess = (data) => {\r\n            const {loginToken, roomId, userId} = data;\r\n            const maxAge = 7 * 24 * 60 * 60;\r\n            \r\n            setCookie('loginToken', loginToken, { path: '/', maxAge });\r\n            setCookie('userInfo', {roomId, userId}, { path: '/', maxAge });\r\n        };\r\n        break;\r\n      default:\r\n    }\r\n    if (req !== \"\" || typeof req !== \"undefined\") makePostRequest(req, api, dataparam, '', onSuccess);\r\n  };\r\n\r\n  return [\r\n    cookies,\r\n    makeRequest,\r\n  ];\r\n}\r\n","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Dashboard\\CardView.js",[],["164","165"],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\DeckViewLogin.js",["166","167","168"],"import React, {useEffect} from 'react';\r\n\r\nimport {Grid, TextField, Button, Paper, Typography} from '@material-ui/core';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\n\r\nimport {useRouteMatch} from 'react-router-dom';\r\n\r\nimport usePlayerLogin from '../../util/usePlayerLogin';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    paperRoot: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center'\r\n    },\r\n}));\r\n\r\nfunction DeckViewLogin(props) {\r\n    const {roomId} = props;\r\n    const match = useRouteMatch();\r\n\r\n    const classes = useStyles();\r\n\r\n    const [cookies, setPlayerLogin] = usePlayerLogin();\r\n\r\n    const handleAdminLogin = e => {\r\n        e.preventDefault();\r\n        const password = e.target.password.value;\r\n        const playerId = e.target.playerId.value;\r\n        setPlayerLogin('player-login', {roomId, playerId, password});\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (cookies.loginToken && cookies.userInfo) {\r\n          const {roomId, userId} = cookies.userInfo;\r\n          if (match.path) {\r\n          const rootPath = match.path.split('/:roomId/')[0];\r\n          window.location.assign(`${rootPath}/${roomId}/${userId}`);\r\n        };\r\n      }\r\n    }, [cookies]);\r\n\r\n    // Temporary for UPSCA purpose\r\n    useEffect(()=>{\r\n        if (roomId === 'upsca') {\r\n            const rootPath = match.path.split('/:roomId/')[0]\r\n            window.location.assign(`${rootPath}/UPSCA`)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n    <Grid container direction='column' justify='center' alignItems='center' spacing={2} className={classes.root}>\r\n        <Grid item md={6} sm={10} xs={12}>\r\n            <Paper classes={{root: classes.paperRoot}}>\r\n                <Grid container direction='column' justify='center' alignItems='center' spacing={2}>\r\n                    <Grid item>\r\n                        <Typography variant='h3'>Room {roomId} Player Login</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <form onSubmit={handleAdminLogin}>\r\n                        <Grid container direction='row' spacing={1} justify='center' alignItems='center'>\r\n                            <Grid item md={6} sm={12}>\r\n                                <TextField variant='outlined' label='Player ID' name='playerId' margin=\"dense\" fullWidth/>\r\n                            </Grid>\r\n                            <Grid item md={6} sm={12}>\r\n                                <TextField variant='outlined' label='Password' name='password' type='password' margin=\"dense\" fullWidth/>\r\n                            </Grid>\r\n                            <Grid item md={12} sm={12}>\r\n                                <Button variant='contained' type='submit' fullWidth>Login</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    </Grid>\r\n    )\r\n  }\r\n\r\n  export default DeckViewLogin;","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\AddCardDialog.js",["169"],"import React, {useState} from 'react';\r\nimport {TextField} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport DialogScaffold from '../CommonComponents/DialogScaffold'\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n\r\n}));\r\n\r\nconst FieldsGrid = (props) => {\r\n    const {setNoOfCards, noOfCards, confirmFinal} = props;\r\n    return(\r\n    <React.Fragment>\r\n        {\r\n        !confirmFinal &&\r\n        <TextField\r\n            autoFocus\r\n            fullWidth\r\n            label='No. of cards'\r\n            margin='dense'\r\n            value={noOfCards}\r\n            onChange={e=>setNoOfCards(e.target.value)}\r\n        />\r\n        }\r\n    </React.Fragment>);\r\n};\r\n\r\nconst AddCardDialog = (props) => {\r\n    const {open, setOpen, onConfirm, playerId, playerName} = props;\r\n    const classes = useStyles();\r\n\r\n    const [confirmFinal, setConfirmFinal] = useState(false);\r\n    const [noOfCards, setNoOfCards] = useState('');\r\n\r\n    const handleOpen = () => {\r\n        setConfirmFinal(false);\r\n        setOpen();\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        if (confirmFinal) {\r\n            onConfirm(playerId, noOfCards);\r\n            setOpen();\r\n            setNoOfCards('');\r\n            setConfirmFinal(false);\r\n        } else if (noOfCards.length > 0) {\r\n            setConfirmFinal(true);\r\n        };\r\n    };\r\n\r\n    const handleCancel = ()=>{\r\n        setNoOfCards('');\r\n    };\r\n\r\n    return (\r\n        <DialogScaffold\r\n        open={open}\r\n        setOpen={handleOpen}\r\n        onConfirm={handleConfirm}\r\n        onCancel={handleCancel}\r\n        title='Add Cards'\r\n        contentText={`${confirmFinal ? \r\n            `Are you sure to add ${noOfCards} cards to player ${playerId} ${playerName}'s deck?` :\r\n            `Specify how many cards you want to add.`\r\n            }`}\r\n        FieldsGrid={<FieldsGrid \r\n                    noOfCards={noOfCards} \r\n                    setNoOfCards={setNoOfCards} \r\n                    confirmFinal={confirmFinal}\r\n                    />\r\n                   }\r\n        confirmText={`${confirmFinal ? 'Confirm': 'Done'}`}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AddCardDialog;\r\n\r\n","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\DeleteCardDialog.js",["170"],"import React, {useState} from 'react';\r\nimport {TextField} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport DialogScaffold from '../CommonComponents/DialogScaffold'\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n\r\n}));\r\n\r\nconst FieldsGrid = (props) => {\r\n    const {setCardId, cardId, confirmFinal} = props;\r\n    return(\r\n    <React.Fragment>\r\n        {\r\n        !confirmFinal &&\r\n        <TextField\r\n            autoFocus\r\n            fullWidth\r\n            label='Card No.'\r\n            margin='dense'\r\n            value={cardId}\r\n            onChange={e=>setCardId(e.target.value)}\r\n        />\r\n        }\r\n    </React.Fragment>);\r\n};\r\n\r\nconst DeleteCardDialog = (props) => {\r\n    const {open, setOpen, onConfirm, playerId, playerName} = props;\r\n    const classes = useStyles();\r\n\r\n    const [confirmFinal, setConfirmFinal] = useState(false);\r\n    const [cardId, setCardId] = useState('');\r\n\r\n    const handleOpen = () => {\r\n        setConfirmFinal(false);\r\n        setOpen();\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        if (confirmFinal) {\r\n            onConfirm(playerId, cardId);\r\n            setOpen();\r\n            setCardId('');\r\n            setConfirmFinal(false);\r\n        } else if (cardId.length > 0) {\r\n            setConfirmFinal(true);\r\n        };\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setCardId('');\r\n    };\r\n\r\n    return (\r\n        <DialogScaffold\r\n        open={open}\r\n        setOpen={handleOpen}\r\n        onConfirm={handleConfirm}\r\n        onCancel={handleCancel}\r\n        title='Delete Card'\r\n        contentText={`${confirmFinal ? \r\n            `Are you sure to delete player ${playerId} ${playerName}'s card ${cardId}?` :\r\n            `Specify which card you want to delete.`\r\n            }`}\r\n        FieldsGrid={<FieldsGrid \r\n                    cardId={cardId} \r\n                    setCardId={setCardId} \r\n                    confirmFinal={confirmFinal}\r\n                    />\r\n                   }\r\n        confirmText={`${confirmFinal ? 'Confirm': 'Done'}`}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DeleteCardDialog;\r\n\r\n","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\Admin\\DeletePlayerDialog.js",["171","172"],"import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport DialogScaffold from '../CommonComponents/DialogScaffold'\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n\r\n}));\r\n\r\nconst DeletePlayerDialog = (props) => {\r\n    const {open, setOpen, onConfirm, playerId, playerName} = props;\r\n    const classes = useStyles();\r\n\r\n    const handleConfirm = () => {\r\n        onConfirm(playerId);\r\n        setOpen();\r\n    };\r\n\r\n    return(\r\n        <DialogScaffold\r\n        open={open}\r\n        setOpen={setOpen}\r\n        onConfirm={handleConfirm}\r\n        title='Delete Player'\r\n        contentText={`Are you sure to delete player ${playerId} ${playerName}?`}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DeletePlayerDialog;\r\n\r\n","D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\CommonComponents\\DialogScaffold.js",[],"D:\\Desktop\\bingo\\bingo-frontend\\src\\pages\\Classic\\GameDrawer\\ResetPickedCellsDialog.js",["173"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport DialogScaffold from '../CommonComponents/DialogScaffold'\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n\r\n}));\r\n\r\nconst ResetPickedCellsDialog = (props) => {\r\n    const {open, setOpen, onConfirm} = props;\r\n    const classes = useStyles();\r\n\r\n    const handleConfirm = () => {\r\n        onConfirm();\r\n        setOpen();\r\n    };\r\n\r\n    return(\r\n        <DialogScaffold\r\n        open={open}\r\n        setOpen={setOpen}\r\n        onConfirm={handleConfirm}\r\n        title='Reset Draw Numbers'\r\n        contentText={`Are you sure to reset the draw? This can't be undone.`}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ResetPickedCellsDialog;\r\n\r\n",{"ruleId":"174","severity":1,"message":"175","line":9,"column":3,"nodeType":"176","messageId":"177","endLine":9,"endColumn":7},{"ruleId":"174","severity":1,"message":"178","line":25,"column":10,"nodeType":"176","messageId":"177","endLine":25,"endColumn":14},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"174","severity":1,"message":"185","line":41,"column":7,"nodeType":"176","messageId":"177","endLine":41,"endColumn":19},{"ruleId":"179","replacedBy":"186"},{"ruleId":"181","replacedBy":"187"},{"ruleId":"174","severity":1,"message":"188","line":20,"column":12,"nodeType":"176","messageId":"177","endLine":20,"endColumn":21},{"ruleId":"174","severity":1,"message":"189","line":33,"column":38,"nodeType":"176","messageId":"177","endLine":33,"endColumn":47},{"ruleId":"190","severity":1,"message":"191","line":43,"column":8,"nodeType":"192","endLine":43,"endColumn":17,"suggestions":"193"},{"ruleId":"174","severity":1,"message":"194","line":18,"column":17,"nodeType":"176","messageId":"177","endLine":18,"endColumn":26},{"ruleId":"179","replacedBy":"195"},{"ruleId":"181","replacedBy":"196"},{"ruleId":"174","severity":1,"message":"197","line":84,"column":13,"nodeType":"176","messageId":"177","endLine":84,"endColumn":18},{"ruleId":"174","severity":1,"message":"198","line":85,"column":25,"nodeType":"176","messageId":"177","endLine":85,"endColumn":35},{"ruleId":"190","severity":1,"message":"199","line":203,"column":8,"nodeType":"192","endLine":203,"endColumn":17,"suggestions":"200"},{"ruleId":"190","severity":1,"message":"201","line":214,"column":10,"nodeType":"192","endLine":214,"endColumn":12,"suggestions":"202"},{"ruleId":"174","severity":1,"message":"203","line":19,"column":7,"nodeType":"176","messageId":"177","endLine":19,"endColumn":12},{"ruleId":"204","severity":1,"message":"205","line":88,"column":17,"nodeType":"206","messageId":"207","endLine":88,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":91,"column":17,"nodeType":"206","messageId":"207","endLine":91,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":94,"column":17,"nodeType":"206","messageId":"207","endLine":94,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":97,"column":17,"nodeType":"206","messageId":"207","endLine":97,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":100,"column":17,"nodeType":"206","messageId":"207","endLine":100,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":103,"column":17,"nodeType":"206","messageId":"207","endLine":103,"endColumn":23},{"ruleId":"190","severity":1,"message":"208","line":148,"column":8,"nodeType":"192","endLine":148,"endColumn":21,"suggestions":"209"},{"ruleId":"190","severity":1,"message":"210","line":162,"column":8,"nodeType":"192","endLine":162,"endColumn":10,"suggestions":"211"},{"ruleId":"179","replacedBy":"212"},{"ruleId":"181","replacedBy":"213"},{"ruleId":"174","severity":1,"message":"194","line":18,"column":17,"nodeType":"176","messageId":"177","endLine":18,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":122,"column":9,"nodeType":"206","messageId":"207","endLine":122,"endColumn":15},{"ruleId":"174","severity":1,"message":"214","line":3,"column":15,"nodeType":"176","messageId":"177","endLine":3,"endColumn":19},{"ruleId":"174","severity":1,"message":"215","line":3,"column":21,"nodeType":"176","messageId":"177","endLine":3,"endColumn":29},{"ruleId":"174","severity":1,"message":"216","line":3,"column":31,"nodeType":"176","messageId":"177","endLine":3,"endColumn":43},{"ruleId":"174","severity":1,"message":"217","line":20,"column":12,"nodeType":"176","messageId":"177","endLine":20,"endColumn":21},{"ruleId":"174","severity":1,"message":"218","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":20},{"ruleId":"179","replacedBy":"219"},{"ruleId":"181","replacedBy":"220"},{"ruleId":"174","severity":1,"message":"221","line":4,"column":21,"nodeType":"176","messageId":"177","endLine":4,"endColumn":31},{"ruleId":"190","severity":1,"message":"222","line":44,"column":8,"nodeType":"192","endLine":44,"endColumn":17,"suggestions":"223"},{"ruleId":"190","severity":1,"message":"224","line":52,"column":8,"nodeType":"192","endLine":52,"endColumn":10,"suggestions":"225"},{"ruleId":"174","severity":1,"message":"226","line":31,"column":11,"nodeType":"176","messageId":"177","endLine":31,"endColumn":18},{"ruleId":"174","severity":1,"message":"226","line":31,"column":11,"nodeType":"176","messageId":"177","endLine":31,"endColumn":18},{"ruleId":"174","severity":1,"message":"227","line":2,"column":9,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"226","line":13,"column":11,"nodeType":"176","messageId":"177","endLine":13,"endColumn":18},{"ruleId":"174","severity":1,"message":"226","line":12,"column":11,"nodeType":"176","messageId":"177","endLine":12,"endColumn":18},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","no-native-reassign",["228"],"no-negated-in-lhs",["229"],["228"],["229"],"'cards_static' is assigned a value but never used.",["228"],["229"],"'setRoomID' is assigned a value but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.path', 'playerId', 'roomId', and 'setClassicGameAdmin'. Either include them or remove the dependency array.","ArrayExpression",["230"],"'setCookie' is assigned a value but never used.",["228"],["229"],"'cards' is assigned a value but never used.","'isLoading2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomId' and 'setClassicGameAdmin'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'cookies.userInfo', 'roomId', and 'setPickedCells'. Either include them or remove the dependency array.",["232"],"'bingo' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has a missing dependency: 'intervalId'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has missing dependencies: 'roomId' and 'setPickedCells'. Either include them or remove the dependency array.",["234"],["228"],["229"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ariaLabel' is assigned a value but never used.","'useContext' is defined but never used.",["228"],["229"],"'withStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'match.path'. Either include it or remove the dependency array.",["235"],"React Hook useEffect has missing dependencies: 'match.path' and 'roomId'. Either include them or remove the dependency array.",["236"],"'classes' is assigned a value but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [cookies, match.path, playerId, roomId, setClassicGameAdmin]",{"range":"251","text":"252"},"Update the dependencies array to be: [cookies, roomId, setClassicGameAdmin]",{"range":"253","text":"254"},"Update the dependencies array to be: [cookies.userInfo, roomId, setPickedCells]",{"range":"255","text":"256"},"Update the dependencies array to be: [intervalId, pickedCells]",{"range":"257","text":"258"},"Update the dependencies array to be: [roomId, setPickedCells]",{"range":"259","text":"260"},"Update the dependencies array to be: [cookies, match.path]",{"range":"261","text":"262"},"Update the dependencies array to be: [match.path, roomId]",{"range":"263","text":"264"},[1174,1183],"[cookies, match.path, playerId, roomId, setClassicGameAdmin]",[6173,6182],"[cookies, roomId, setClassicGameAdmin]",[6491,6493],"[cookies.userInfo, roomId, setPickedCells]",[4044,4057],"[intervalId, pickedCells]",[4412,4414],"[roomId, setPickedCells]",[1297,1306],"[cookies, match.path]",[1542,1544],"[match.path, roomId]"]